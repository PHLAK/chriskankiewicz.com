openapi: 3.0.0
info:
  title: Chris's Resume as a Service
  description: Chris Kankiewicz's Resume as a Service.
  version: 0.1.0

servers:
  - url: https://chriskankiewicz.com/api

paths:
  /education:
    get:
      summary: List Education
      description: Returns a list of all education.
      tags:
        - Education
      responses:
        '200':
          description: A list of education
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Education'

    post:
      summary: Create Education
      description: Creates a new experience.
      tags:
        - Education
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Education'
      responses:
        '201':
          description: The created education
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Education'
        '422':
          $ref: '#/components/responses/422'

  /education/{id}:
    get:
      summary: Fetch Education
      description: Returns a single education.
      tags:
        - Education
      parameters:
        - in: query
          name: id
          schema:
            type: integer
            example: 1337
      responses:
        '200':
          description: A single education
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Education'
        '404':
          $ref: '#/components/responses/404'

    patch:
      summary: Update Education
      description: Update an education.
      tags:
        - Education
      parameters:
        - in: query
          name: id
          schema:
            type: integer
            example: 1337
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Education'
      responses:
        '200':
          description: The updated education
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Education'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'

    delete:
      summary: Delete Education
      description: Delete an education.
      tags:
        - Education
      parameters:
        - in: query
          name: id
          schema:
            type: integer
            example: 1337
      responses:
        '204':
          description: No Content
        '404':
          $ref: '#/components/responses/404'

  /experience:
    get:
      summary: List Experiences
      description: Returns a list of all experiences.
      tags:
        - Experience
      responses:
        '200':
          description: A list of experiences
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Experience'

    post:
      summary: Create Experience
      description: Creates a new experience.
      tags:
        - Experience
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Experience'
      responses:
        '201':
          description: The created experience
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Experience'
        '422':
          $ref: '#/components/responses/422'

  /experience/{id}:
    get:
      summary: Fetch Experience
      description: Returns a single experience.
      tags:
        - Experience
      parameters:
        - in: query
          name: id
          schema:
            type: integer
            example: 1337
      responses:
        '200':
          description: A single experience
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Experience'
        '404':
          $ref: '#/components/responses/404'

    patch:
      summary: Update Experience
      description: Update an experience.
      tags:
        - Experience
      parameters:
        - in: query
          name: id
          schema:
            type: integer
            example: 1337
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Experience'
      responses:
        '200':
          description: The updated experience
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Experience'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'

      delete:
        summary: Delete Experience
        description: Delete an experience.
        tags:
          - Experience
        parameters:
          - in: query
            name: id
            schema:
              type: integer
              example: 1337
        responses:
          '204':
            description: No Content
          '404':
            $ref: '#/components/responses/404'

  /project:
    get:
      summary: List Projects
      description: Returns a list of all projects.
      tags:
        - Project
      responses:
        '200':
          description: A list of projects
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'

    post:
      summary: Create Project
      description: Creates a new project.
      tags:
        - Project
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
      responses:
        '201':
          description: The created project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '422':
          $ref: '#/components/responses/422'

  /project/{id}:
    get:
      summary: Fetch Project
      description: Returns a single project.
      tags:
        - Project
      parameters:
        - in: query
          name: id
          schema:
            type: integer
            example: 1337
      responses:
        '200':
          description: A single project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '404':
          $ref: '#/components/responses/404'

    patch:
      summary: Update Project
      description: Update a project.
      tags:
        - Project
      parameters:
        - in: query
          name: id
          schema:
            type: integer
            example: 1337
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
      responses:
        '200':
          description: The updated project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '404':
          $ref: '#/components/responses/404'
        '422':
          $ref: '#/components/responses/422'

      delete:
        summary: Delete Project
        description: Delete a project.
        tags:
          - Project
        parameters:
          - in: query
            name: id
            schema:
              type: integer
              example: 1337
        responses:
          '204':
            description: No Content
          '404':
            $ref: '#/components/responses/404'

components:
  schemas:
    Education:
      type: object
      properties:
        id:
          type: integer
        institution:
          type: string
        degree:
          type: string
        start_date:
          type: string
        end_date:
          type: string
        currently_enrolled:
          type: boolean
      example:
        id: 1337
        company: Hogwarts School of Witchcraft and Wizardry
        title: Care of Magical Creatures
        start_date: '1986-05-20 00:00:00'
        end_date: '1986-07-06 00:00:00'
        currently_enrolled: false

    Experience:
      type: object
      properties:
        id:
          type: integer
        company:
          type: string
        title:
          type: string
        start_date:
          type: string
        end_date:
          type: string
        current_position:
          type: boolean
        location:
          type: string
      example:
        id: 1337
        company: Pied Piper
        title: Data Janitor
        start_date: '1986-05-20 00:00:00'
        end_date: '1986-07-06 00:00:00'
        current_position: false
        location: San Francisco, California

    Project:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        project_url:
          type: string
        source_url:
          type: string
      example:
        id: 1337
        name: Death Star
        description: That's no moon!
        project_url: https://en.wikipedia.org/wiki/Death_star
        source_url: https://github.com/PHLAK/death-star

  responses:
    '404':
      description: Not Found
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
            example:
              message: No query results for model

    '422':
      description: Unprocessable Entity
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
              errors:
                type: array
            example:
              message: The given data was invalid.
